Unable to find use case definition file.  Aborting.

Usage: DoxygenParse.exe <codeDir> <func> ...

  <func> = f     Generate a mapping of line numbers in all code files to 
                   function names, outputs a file <codeDir>/functions.txt
             Ex: DoxygenParse U:\classes\cs706\yukon\TestProg f

         = g     Generate a call graph for all *_cgraph.dot files in the
                   <codeDir>/doc/html/ directory, default output directory of
                   Doxygen HTML output.  Note that .dot files must be specified
                   to be retained in the Doxygen config file.
             Ex: DoxygenParse U:\classes\cs706\yukon\TestProg\ g

         = s     Generate a shortest path mapping (if one exists) from all use
                   cases to edited function using Dijkstra's algorithm.  Looks
                   in <codeDir>/doc/html for call graph dot files, parses a
                   use case definition file (see code for format), and parses
                   a edited functions file (see code for format); outputs a
                   list of use cases and their shortest-path edited function
                   call graph.
             Ex: U:\classes\cs706\yukon\TestProg\ s 
                   U:\classes\cs706\yukon\TestProg\usecase.txt
                   U:\classes\cs706\yukon\TestProg\edited.txt

Unable to find use case definition file.  Aborting.

Usage: DoxygenParse.exe <codeDir> <func> ...

  <func> = f     Generate a mapping of line numbers in all code files to 
                   function names, outputs a file <codeDir>/functions.txt
             Ex: DoxygenParse U:\classes\cs706\yukon\TestProg f

         = g     Generate a call graph for all *_cgraph.dot files in the
                   <codeDir>/doc/html/ directory, default output directory of
                   Doxygen HTML output.  Note that .dot files must be specified
                   to be retained in the Doxygen config file.
             Ex: DoxygenParse U:\classes\cs706\yukon\TestProg\ g

         = s     Generate a shortest path mapping (if one exists) from all use
                   cases to edited function using Dijkstra's algorithm.  Looks
                   in <codeDir>/doc/html for call graph dot files, parses a
                   use case definition file (see code for format), and parses
                   a edited functions file (see code for format); outputs a
                   list of use cases and their shortest-path edited function
                   call graph.
             Ex: U:\classes\cs706\yukon\TestProg\ s 
                   U:\classes\cs706\yukon\TestProg\usecase.txt
                   U:\classes\cs706\yukon\TestProg\edited.txt

Unable to find use case definition file.  Aborting.

Usage: DoxygenParse.exe <codeDir> <func> ...

  <func> = f     Generate a mapping of line numbers in all code files to 
                   function names, outputs a file <codeDir>/functions.txt
             Ex: DoxygenParse U:\classes\cs706\yukon\TestProg f

         = g     Generate a call graph for all *_cgraph.dot files in the
                   <codeDir>/doc/html/ directory, default output directory of
                   Doxygen HTML output.  Note that .dot files must be specified
                   to be retained in the Doxygen config file.
             Ex: DoxygenParse U:\classes\cs706\yukon\TestProg\ g

         = s     Generate a shortest path mapping (if one exists) from all use
                   cases to edited function using Dijkstra's algorithm.  Looks
                   in <codeDir>/doc/html for call graph dot files, parses a
                   use case definition file (see code for format), and parses
                   a edited functions file (see code for format); outputs a
                   list of use cases and their shortest-path edited function
                   call graph.
             Ex: U:\classes\cs706\yukon\TestProg\ s 
                   U:\classes\cs706\yukon\TestProg\usecase.txt
                   U:\classes\cs706\yukon\TestProg\edited.txt

Unable to find use case definition file.  Aborting.

Usage: DoxygenParse.exe <codeDir> <func> ...

  <func> = f     Generate a mapping of line numbers in all code files to 
                   function names, outputs a file <codeDir>/functions.txt
             Ex: DoxygenParse U:\classes\cs706\yukon\TestProg f

         = g     Generate a call graph for all *_cgraph.dot files in the
                   <codeDir>/doc/html/ directory, default output directory of
                   Doxygen HTML output.  Note that .dot files must be specified
                   to be retained in the Doxygen config file.
             Ex: DoxygenParse U:\classes\cs706\yukon\TestProg\ g

         = s     Generate a shortest path mapping (if one exists) from all use
                   cases to edited function using Dijkstra's algorithm.  Looks
                   in <codeDir>/doc/html for call graph dot files, parses a
                   use case definition file (see code for format), and parses
                   a edited functions file (see code for format); outputs a
                   list of use cases and their shortest-path edited function
                   call graph.
             Ex: U:\classes\cs706\yukon\TestProg\ s 
                   U:\classes\cs706\yukon\TestProg\usecase.txt
                   U:\classes\cs706\yukon\TestProg\edited.txt

